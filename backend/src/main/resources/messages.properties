ldap.connect=Binding to directory {0}:{1}/{2}
ldap.bind=LDAP Bind - DN: {0}
ldap.invalidHost=Invalid host name/IP addr. {0}
ldap.invalidName=Invalid LDAP name {0}
ldap.bind=Binding to directory : {0}
ldap.bindError = Bind error : {0}
ldap.connectOK=Bound to Directory
ldap.incorrectAuthn=Invalid Name Exception: {0} -  Bind DN: {1}
ldap.users=Get users, subtree: {0}
ldap.user=user: {0}
ldap.error.user=Error (search users) - {0}
ldap.error.search=LDAP search error {0}
ldap.incorrectDN=Invalid Name Exception: {0}
ldap.attrId=Attribute id {0}
ldap.attrCert=Attribute cert. {0} 


spif.path=SPIF path {0}
spif.start=Decoding SPIF: {0} ({1})
spif.jaxbErr=JAXB error: {0}
spif.loaded=SPIF loaded: {0} ({1})
spif.decodeErr=Cannot decode {0}: {1}
spif.readDirErr=Cannot read {0}: {1}
spif.decoded=Decoded {0}
spif.response=getRoles response
spif.acReqStart=attr. certificate request
spif.acReq= AC request holder {0} requestor {1} {2}/{3} start {4} end {5}
spif.overwrite=Entry already exist, will be overwritten
spif.classif=Classification: Id {0} - Lacv {1} - {2}
spif.description=Description: {0} - {1}
spif.clearances=Get clearances {0}
spit.test=Test
spit.test.value=Test value {0}
spif.getPolicies=Get policies
spif.getPoliciesDetails=Policy {0} File {1}
spif.getClearance=Get clearance : pol. {0} lacv {1}
spif.getClearanceError=Decoding error: pol. {0} lacv {1}
spif.getClearanceNotFound=pol. {0} lacv {1} : no certificate found
spif.getName=Get clearance name : pol. {0} lacv {1}
spif.getName.ok=Clearance: {0}
spif.getName.nok=Clearance not found
spif.duplicate=Duplicate object id {0} files: {1}
spif.noDuplicate=Non Duplicate object id {0}
spif.testDuplicate=Testing  {0} - {1}- {2}
spif.checkDuplicate=checkDuplicate file: {0} - {1}/{2} - file: {0}
spif.users=Get users
spif.users.ok=Get users ok
spif.test=Test
spif.test.ok=Test OK
spif.dirDebug=DEBUG SPIF post sz {2} oid {0} file: {1}
ac.add=Adding attr. certificate request for {0}
ac.badldapname=Invalid LDAP name holder {0} requestor {1} - {2}
ac.reqOK=Attribute certificate request created
ac.ioerror=I/O Error {0}
ac.namingerror=Naming error {0}
ac.holder=Holder {0}
ac.clearance=Attribute certificate has {0} attributes
ac.clearance.details=policyID {0} - classList {1}
ac.clearance.found=Clearance read from certificate
ac.policy.found=Policy read from certificate
ac.get=Get attr. certificates for {0}
ac.getError=Get attr. cert. error for {1} : {0}

# To be reviewed : ac.verifFailures
ac.verifFailures=Number of verification failures : {0}
ac.policy=Policy: {0}
ac.arrays=Arrays : {0}


ldap.getDistinguishedNameFromEmail=getDistinguishedNameFromEmail for {0}
ldap.getDistinguishedNameFromUID=getDistinguishedNameFromUID for {0}
ldap.getDistinguishedNameFromCN=ldap.getDistinguishedNameFromCN for {0}
ldap.hierarchy=hierarchy - user: {0}
ldap.debug.hierarchyEnd=hierarchy done
ldap.error.attributes=Internal error ({0}) - {1}
ldap.error.person=Internal error (create person) - {1}
ldap.inetorgperson=InetOrgPerson {0}
ldap.inetorgperson.end=InetOrgPerson ok
ldap.dndata = dndata {0}
ldap.dndataEnd = dndata done
ldap.person = Person {0}
ldap.person.end = Person created
ldap.orgperson=Org. Person {0}
ldap.orgperson.end=Org. Person created
ldap.rdninfo= rdninfo for {0}={1}
ldap.useEntry=DN({0}): {1} - Mgr: {2}
ldap.useEntryNoMgr=DN({0}): {1} - Mgr: none
ldap.setup=LDAP setup - host: {0} - bind DN: {1} - base: {2}
ldap.query=Querying Directory : {0}
ldap.query.end=Query ok
ldap.notfound={0} not found in Directory
ldap.uid.notfound= uid {0} not found in Directory
ldap.cn.notfound= CN {0} not found in Directory
ldap.count=Count {0}
ldap.searchOK={0} is used by {1}
ldap.wrongAuthn=Authentication mode not supported
ldap.falseAuthn=Authentication exception: {0} - Bind DN: {1}
ldap.invalidSearchFilter=Misconfiguration - Invalid search filter {0}
ldap.incorrectAuthn=Invalid Name Exception: {0} -  Bind DN: {1}
ldap.stateExc=Invalid State Exception: {0} -  Bind DN: {1}
ldap.invDn=Invalid Name Exception: {0}
ldap.close=Closing connection to {0}
ldap.close.error=Internal error when closing connection to {0} - {1}
ldap.tnlist.error=Internal error when searching Tree node {0} 
ldap.internal.error=Internal error ({0}): {1}
ldap.manager=Mgrlist {0}
ldap.mgrList.add=Creating Mgr List for {0}
ldap.illegal.argument­={0}: {1}
ldap.addReport=Adding report {1} to {0} mgr list
ldap.addBoss= Adding boss {1} to {0} mgr list
ldap.mgrList=MgrList - {0}
ldap.mgrListNoReport=MgrList {0} (no reports)
json.processing.exception=JSON processing exception on {0} : {1}
ldap.debug.rdninfo=DN : {0} ({1})
ldap.debug.rdnnoinfo=DN : {0}
ldap.debug.attribs=ldap attribute ({0}): {1} - {2}
ldap.debug.hierarchy=Report {0} - Mgrs ({2}) {1}
ldap.debug.hierarchy2={0} - Reports {1}
ldap.debug.addsubtree=Add subTree {0}
ldap.debug.origin=Origin {0}
ldap.debug.donedn=DN {0} - doneDn: {1}
ldap.debug.dnMgrs=dnMgrs R:{0} - M:{1}
ldap.debug.dnReports=-->Report {0} {2} - Manager(s) {1}
ldap.debug.target=---->Target {0} {1}
ldap.debug.findDnReport= findDnReport {0}
ldap.debug.reportsList=Report {0} - Manager {1}
ldap.debug.managers=Managers ({1}) {0}
ldap.debug.findReportsManagedBy=findReportsManagedBy {0} -> {1}


ldap.debug.inetorgperson=Inetorgperson ({0}): {1} - {2}
ldap.search.noresult=Entry {0} not found in Directory
ldap.objclass=DN: {0} - obj. class {1}

http.debug.header=HTTP header {0}: {1}
http.debug.headersResult=Listed {0} headers\n
http.debug.env=Env. variable {0}: {1}